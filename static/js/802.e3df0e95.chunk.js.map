{"version":3,"file":"static/js/802.e3df0e95.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","Redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/loader/loader.styled.jsx","components/loader/loader.jsx","pages/contactsPage.jsx","pages/homePage.jsx","pages/homePage.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Text = styled.h1`\n  margin-top: 40px;\n  margin-left: 40px;\n`;\n\nexport const TitleCss = styled.p`\n  color: rgba(5, 25, 55, 1);\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const ContactFormCss = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  font-weight: 500;\n  background-color: #dfeff5;\n  border: 1px solid rgba(5, 25, 55, 1);\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n  margin-top: 20px;\n  margin-left: 44px;\n`;\n\nexport const Description = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: rgba(5, 25, 55, 1);\n  font-size: 20px;\n`;\n\nexport const InputFormCss = styled.input`\n  display: block;\n  width: 220px;\n  height: 40px;\n  padding: 12px;\n  box-sizing: border-box;\n  margin-bottom: 20px;\n  border: 2px solid #dfeff5;\n  border-radius: 5px;\n\n  /* margin-top: 10px;\n  padding: 6px 10px;\n  border: none;\n  border: 2px solid #dfeff5;\n  border-radius: 5px;\n  font: inherit;\n  cursor: pointer; */\n\n  &:focus {\n    outline: none;\n    border: 2px solid #e88606;\n    background-color: #fff;\n  }\n`;\n\nexport const ButtonCss = styled.button`\n  padding: 8px 10px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  border: 1px solid transparent;\n  color: #fff;\n  font-size: 20px;\n  background: rgba(5, 25, 55, 1);\n  transition: all 250ms;\n\n  &:hover,\n  &:focus {\n    background-image: linear-gradient(\n      90deg,\n      rgba(27, 163, 196, 1) 66%,\n      rgba(5, 25, 55, 1) 100%\n    );\n    color: #fff;\n    border: 1px solid #dcd5d5;\n    cursor: pointer;\n    box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.08),\n      0px 1px 1px rgba(46, 47, 66, 0.16), 0px 1px 6px rgba(46, 47, 66, 0.08);\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContactsThunk, getRequestContacts } from 'Redux/contactsThunk';\nimport {\n  ContactFormCss,\n  Description,\n  InputFormCss,\n  ButtonCss,\n} from 'components/ContactForm/ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [userName, setUserName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getRequestContacts());\n  }, [dispatch]);\n\n  const handleInputContacts = e => {\n    switch (e.target.name) {\n      case 'userName':\n        setUserName(e.target.value);\n        break;\n\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleAddContacts = ev => {\n    ev.preventDefault();\n    const newContact = {\n      name: userName,\n      number: number,\n    };\n    dispatch(addContactsThunk(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setUserName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactFormCss onSubmit={handleAddContacts}>\n      <p> Add Contact</p>\n      <Description>\n        Name\n        <InputFormCss\n          onChange={handleInputContacts}\n          type=\"text\"\n          name=\"userName\"\n          value={userName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Description>\n      <Description>\n        Number\n        <InputFormCss\n          onChange={handleInputContacts}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Description>\n      <ButtonCss type=\"submit\">Add contacts</ButtonCss>\n    </ContactFormCss>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListCss = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n  max-width: 400px;\n  padding: 12px;\n  border-radius: 8px;\n  background-color: #dfeff5;\n  border: 1px solid rgba(5, 25, 55, 1);\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  list-style: none;\n  margin-left: 44px;\n  margin-bottom: 20px;\n`;\n\nexport const Items = styled.li`\n  background-color: #fff;\n  border: 2px solid #dfeff5;\n  padding: 6px;\n  border-radius: 8px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n\nexport const ButtonCss = styled.button`\n  padding: 8px 10px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  border: 1px solid transparent;\n  color: #fff;\n  font-size: 20px;\n  background: rgba(5, 25, 55, 1);\n  transition: all 250ms;\n\n  &:hover,\n  &:focus {\n    background-image: linear-gradient(\n      90deg,\n      rgba(27, 163, 196, 1) 66%,\n      rgba(5, 25, 55, 1) 100%\n    );\n    color: #fff;\n    border: 1px solid #dcd5d5;\n    cursor: pointer;\n    box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.08),\n      0px 1px 1px rgba(46, 47, 66, 0.16), 0px 1px 6px rgba(46, 47, 66, 0.08);\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.includes(filter)\n    );\n  }\n);\n","import React from 'react';\nimport {\n  ContactListCss,\n  Items,\n  ButtonCss,\n} from 'components/ContactList/ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'Redux/selectors';\nimport { deleteContactsThunk } from 'Redux/contactsThunk';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContactList = useSelector(selectFilteredContacts);\n\n  return (\n    <div>\n      <ContactListCss>\n        {filteredContactList?.map(({ id, name, number }) => (\n          <Items key={id}>\n            {name}: {number}\n            <ButtonCss\n              type=\"button\"\n              onClick={() => dispatch(deleteContactsThunk(id))}\n            >\n              Delete\n            </ButtonCss>\n          </Items>\n        ))}\n      </ContactListCss>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterCont = styled.div`\n  margin-bottom: 15px;\n\n  margin-top: 15px;\n  width: 600px;\n  column-gap: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n  margin-left: 44px;\n  color: rgba(5, 25, 55, 1);\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 370px;\n  padding: 8px;\n  margin: 15px 0 10px;\n  border-radius: 5px;\n  border: none;\n  border: 3px solid #dfeff5;\n  font-size: 20px;\n\n  &:focus {\n    outline: none;\n    border: 3px solid #e88606;\n  }\n`;\n","import React from 'react';\nimport { FilterCont, Label, Input } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'Redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterCont>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" onChange={handleInputFilter} />\n      </Label>\n    </FilterCont>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Loading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;","import { Dna } from 'react-loader-spinner';\nimport { Loading } from './loader.styled';\n\nexport const Loader = () => {\n    \n  return (\n    <Loading>\n      <Dna\n        visible={true}\n        height=\"200\"\n        width=\"300\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </Loading>\n  );\n};","import React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Text } from 'components/ContactForm/ContactForm.styled';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container } from 'pages/homePage.styled';\nimport { Loader } from 'components/loader/loader';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectError, selectIsLoading } from 'Redux/selectors';\n\nexport const ContactsPage = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <Container>\n        {error && <p>Whoops, something went wrong: {error}</p>}\n        <ContactForm />\n        {contacts && contacts?.length > 0 && (\n          <>\n            <Text>Contacts</Text>\n            <Filter />\n            <ContactList />\n          </>\n        )}\n        {isLoading && <Loader />}\n      </Container>\n    </>\n  );\n};\n\nexport default ContactsPage;\n","import React from 'react';\nimport { Container, Title, Text } from 'pages/homePage.styled';\nimport { ContactsPage } from 'pages/contactsPage';\nimport { useSelector } from 'react-redux';\nimport { selectAuthenticated } from 'Redux/user/authSelector';\n\nconst HomePage = () => {\n  const authed = useSelector(selectAuthenticated);\n\n  return (\n    <Container>\n      <Title>phonebook</Title>\n      {authed ? <ContactsPage /> : <Text>all your contacts in one place</Text>}\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nmargin-top: 40px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const Title = styled.h1`\n  display: block;\n  text-align: center;\n  color: #2a363b;\n  font-size: 20px;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\nexport const Text = styled.p`\n  display: block;\n  font-size: 18px;\n  text-align: center;\n  text-transform: uppercase;\n  color: #e88606;\n`;"],"names":["Text","styled","ContactFormCss","Description","InputFormCss","ButtonCss","ContactForm","useState","userName","setUserName","number","setNumber","dispatch","useDispatch","useEffect","getRequestContacts","handleInputContacts","e","target","name","value","reset","onSubmit","ev","preventDefault","newContact","addContactsThunk","onChange","type","pattern","title","required","ContactListCss","Items","selectContacts","state","contacts","items","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","filter","contact","toLowerCase","includes","ContactList","filteredContactList","useSelector","map","id","onClick","deleteContactsThunk","FilterCont","Label","Input","Filter","setFilter","Loading","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","ContactsPage","length","authed","selectAuthenticated","Container","Title"],"sourceRoot":""}